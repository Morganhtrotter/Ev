[{"C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\index.js":"1","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\App.js":"2","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\serviceWorker.js":"3","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\redux\\configureStore.js":"4","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\MainComponent.js":"5","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\redux\\promotions.js":"6","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\redux\\dishes.js":"7","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\redux\\leaders.js":"8","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\redux\\comments.js":"9","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\redux\\forms.js":"10","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\MenuComponent.js":"11","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\FieldingComponent.js":"12","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\AboutComponent.js":"13","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\EnterComponent.js":"14","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\ThrowingComponent.js":"15","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\ResultsComponent.js":"16","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\HittingComponent.js":"17","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\redux\\ActionCreators.js":"18","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\redux\\ActionTypes.js":"19","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\BarChart.js":"20","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\shared\\baseUrl.js":"21","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\ContactUs.js":"22"},{"size":609,"mtime":1612219791594,"results":"23","hashOfConfig":"24"},{"size":654,"mtime":1612221060430,"results":"25","hashOfConfig":"24"},{"size":5226,"mtime":1612219791597,"results":"26","hashOfConfig":"24"},{"size":714,"mtime":1612219791596,"results":"27","hashOfConfig":"24"},{"size":2996,"mtime":1612219791593,"results":"28","hashOfConfig":"24"},{"size":565,"mtime":1612219791597,"results":"29","hashOfConfig":"24"},{"size":545,"mtime":1612219791596,"results":"30","hashOfConfig":"24"},{"size":554,"mtime":1612219791597,"results":"31","hashOfConfig":"24"},{"size":561,"mtime":1612219791596,"results":"32","hashOfConfig":"24"},{"size":148,"mtime":1612219791597,"results":"33","hashOfConfig":"24"},{"size":1284,"mtime":1612219791593,"results":"34","hashOfConfig":"24"},{"size":5024,"mtime":1612219791591,"results":"35","hashOfConfig":"24"},{"size":11030,"mtime":1612309285522,"results":"36","hashOfConfig":"24"},{"size":605,"mtime":1612219791591,"results":"37","hashOfConfig":"24"},{"size":5016,"mtime":1612219791594,"results":"38","hashOfConfig":"24"},{"size":6214,"mtime":1612311012496,"results":"39","hashOfConfig":"24"},{"size":5019,"mtime":1612219791592,"results":"40","hashOfConfig":"24"},{"size":6562,"mtime":1612219791595,"results":"41","hashOfConfig":"24"},{"size":554,"mtime":1612219791595,"results":"42","hashOfConfig":"24"},{"size":12062,"mtime":1612219791590,"results":"43","hashOfConfig":"24"},{"size":60,"mtime":1612219791598,"results":"44","hashOfConfig":"24"},{"size":946,"mtime":1612309752317,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"deccnn",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\index.js",[],["96","97"],"C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\App.js",["98"],"import React, { Component } from 'react';\r\nimport Main from './components/MainComponent';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore.js';\r\nimport * as d3 from \"d3\";\r\nimport{ init } from 'emailjs-com';\r\n\r\nconst store = ConfigureStore();\r\n\r\nd3.select(\"p\").style(\"color\", \"black\");\r\n\r\nclass App extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<HashRouter>\r\n\t\t\t\t    <div className=\"App\">\r\n\t\t\t\t      <Main />\r\n\t\t\t\t    </div>\r\n\t\t\t    </HashRouter>\r\n\t    </Provider>\r\n  \t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\serviceWorker.js",[],"C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\redux\\configureStore.js",[],"C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\MainComponent.js",[],"C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\redux\\promotions.js",[],"C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\redux\\dishes.js",[],"C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\redux\\leaders.js",[],"C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\redux\\comments.js",[],"C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\redux\\forms.js",[],"C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\MenuComponent.js",[],"C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\FieldingComponent.js",["99","100","101"],"import React, { Component } from 'react';\r\nimport { Label, Col, Row, Button } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst isValidNumber = (val) => (val >= 20) && (val <= 80);\r\n\r\nclass Fielding extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postComment(\"Fielding\", values.softhands, values.footwork, values.backhand);\r\n        alert(\"Submitted Successfully\");\r\n    }\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className=\"container\">\r\n\t            <div className=\"col-12 col-md-9 pt-3\">\r\n\t                <h4>Fielding Evaluation</h4>\r\n\t                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n\t                    <Row className=\"form-group\">\r\n\t                        <Label htmlFor=\"softhands\" md={2}>Soft Hands</Label>\r\n\t                        <Col md={10}>\r\n\t                            <Control.text model=\".softhands\" id=\"softhands\" name=\"softhands\"\r\n\t                                placeholder=\"20-80\"\r\n\t                                className=\"form-control\" validators={{\r\n                                    required, isNumber, isValidNumber\r\n                                \t}} />\r\n\t                            <Errors\r\n\t                                className=\"text-danger\"\r\n\t                                model=\".softhands\"\r\n\t                                show=\"touched\"\r\n\t                                messages={{\r\n                                    required: 'Required ',\r\n                                    isNumber: 'Must be a number ',\r\n                                    isValidNumber: 'Must be between 20 and 80'\r\n                                \t}}\r\n\t                            />\r\n\t                        </Col>\r\n\t                    </Row>\r\n\t                    <Row className=\"form-group\">\r\n\t                        <Label htmlFor=\"footwork\" md={2}>Footwork</Label>\r\n\t                        <Col md={10}>\r\n\t                            <Control.text model=\".footwork\" id=\"footwork\" name=\"footwork\"\r\n\t                                placeholder=\"20-80\"\r\n\t                                className=\"form-control\" validators={{\r\n                                    required, isNumber, isValidNumber\r\n                                \t}}/>\r\n\t                            <Errors\r\n\t                                className=\"text-danger\"\r\n\t                                model=\".footwork\"\r\n\t                                show=\"touched\"\r\n\t                                messages={{\r\n                                    required: 'Required ',\r\n                                    isNumber: 'Must be a number ',\r\n                                    isValidNumber: 'Must be between 20 and 80'\r\n                                \t}}\r\n\t                            />\r\n\t                        </Col>\r\n\t                    </Row>\r\n\t                    <Row className=\"form-group\">\r\n\t                        <Label htmlFor=\"backhand\" md={2}>Backhand</Label>\r\n\t                        <Col md={10}>\r\n\t                            <Control.text model=\".backhand\" id=\"backhand\" name=\"backhand\"\r\n\t                                placeholder=\"20-80\"\r\n\t                                className=\"form-control\" validators={{\r\n                                    required, isNumber, isValidNumber\r\n                                \t}}/>\r\n\t                            <Errors\r\n\t                                className=\"text-danger\"\r\n\t                                model=\".backhand\"\r\n\t                                show=\"touched\"\r\n\t                                messages={{\r\n                                    required: 'Required ',\r\n                                    isNumber: 'Must be a number ',\r\n                                    isValidNumber: 'Must be between 20 and 80'\r\n                                \t}}\r\n\t                            />\r\n\t                        </Col>\r\n\t                    </Row>\r\n\t                    <Row className=\"form-group\">\r\n\t                        <Col md={{size: 10, offset: 2}}>\r\n\t                            <Button type=\"submit\" color=\"primary\">\r\n\t                                Submit\r\n\t                            </Button>\r\n\t                        </Col>\r\n\t                    </Row>\r\n\t                    <Row className=\"form-group\">\r\n\t                        <Col md={{size: 10, offset: 2}}>\r\n\t                            <Link to=\"/menu\">\r\n\t                                <Button type=\"submit\" color=\"primary\">\r\n\t                                    Back\r\n\t                                </Button>\r\n\t                            </Link>\r\n\t                        </Col>\r\n\t                    </Row>\r\n\t                </LocalForm>\r\n\t            </div>\r\n\t        </div>\r\n\t    );\r\n\t}\r\n}\r\n\r\nexport default Fielding;","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\AboutComponent.js",["102","103","104","105","106","107","108"],"C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\EnterComponent.js",[],"C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\ThrowingComponent.js",["109","110","111"],"import React, { Component } from 'react';\r\nimport { Label, Col, Row, Button } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst isValidNumber = (val) => (val >= 20) && (val <= 80);\r\n\r\nclass Throwing extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postComment(\"Throwing\", values.armaction, values.footwork, values.balance);\r\n        alert(\"Submitted Successfully\");\r\n    }\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className=\"container\">\r\n\t            <div className=\"col-12 col-md-9 pt-3\">\r\n\t                <h4>Throwing Evaluation</h4>\r\n\t                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n\t                    <Row className=\"form-group\">\r\n\t                        <Label htmlFor=\"armaction\" md={2}>Arm Action</Label>\r\n\t                        <Col md={10}>\r\n\t                            <Control.text model=\".armaction\" id=\"armaction\" name=\"armaction\"\r\n\t                                placeholder=\"20-80\"\r\n\t                                className=\"form-control\" validators={{\r\n                                    required, isNumber, isValidNumber\r\n                                \t}}/>\r\n\t                            <Errors\r\n\t                                className=\"text-danger\"\r\n\t                                model=\".armaction\"\r\n\t                                show=\"touched\"\r\n\t                                messages={{\r\n                                    required: 'Required ',\r\n                                    isNumber: 'Must be a number ',\r\n                                    isValidNumber: 'Must be between 20 and 80'\r\n                                \t}}\r\n\t                            />\r\n\t                        </Col>\r\n\t                    </Row>\r\n\t                    <Row className=\"form-group\">\r\n\t                        <Label htmlFor=\"footwork\" md={2}>Footwork</Label>\r\n\t                        <Col md={10}>\r\n\t                            <Control.text model=\".footwork\" id=\"footwork\" name=\"footwork\"\r\n\t                                placeholder=\"20-80\"\r\n\t                                className=\"form-control\" validators={{\r\n                                    required, isNumber, isValidNumber\r\n                                \t}}/>\r\n\t                            <Errors\r\n\t                                className=\"text-danger\"\r\n\t                                model=\".footwork\"\r\n\t                                show=\"touched\"\r\n\t                                messages={{\r\n                                    required: 'Required ',\r\n                                    isNumber: 'Must be a number ',\r\n                                    isValidNumber: 'Must be between 20 and 80'\r\n                                \t}}\r\n\t                            />\r\n\t                        </Col>\r\n\t                    </Row>\r\n\t                    <Row className=\"form-group\">\r\n\t                        <Label htmlFor=\"balance\" md={2}>Balance</Label>\r\n\t                        <Col md={10}>\r\n\t                            <Control.text model=\".balance\" id=\"balance\" name=\"balance\"\r\n\t                                placeholder=\"20-80\"\r\n\t                                className=\"form-control\" validators={{\r\n                                    required, isNumber, isValidNumber\r\n                                \t}}/>\r\n\t                            <Errors\r\n\t                                className=\"text-danger\"\r\n\t                                model=\".balance\"\r\n\t                                show=\"touched\"\r\n\t                                messages={{\r\n                                    required: 'Required ',\r\n                                    isNumber: 'Must be a number ',\r\n                                    isValidNumber: 'Must be between 20 and 80'\r\n                                \t}}\r\n\t                            />\r\n\t                        </Col>\r\n\t                    </Row>\r\n\t                    <Row className=\"form-group\">\r\n\t                        <Col md={{size: 10, offset: 2}}>\r\n\t                            <Button type=\"submit\" color=\"primary\">\r\n\t                                Submit\r\n\t                            </Button>\r\n\t                        </Col>\r\n\t                    </Row>\r\n\t                    <Row className=\"form-group\">\r\n\t                        <Col md={{size: 10, offset: 2}}>\r\n\t                            <Link to=\"/menu\">\r\n\t                                <Button type=\"submit\" color=\"primary\">\r\n\t                                    Back\r\n\t                                </Button>\r\n\t                            </Link>\r\n\t                        </Col>\r\n\t                    </Row>\r\n\t                </LocalForm>\r\n\t            </div>\r\n\t        </div>\r\n\t    );\r\n\t}\r\n}\r\n\r\nexport default Throwing;","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\ResultsComponent.js",["112"],"C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\HittingComponent.js",["113","114","115"],"import React, { Component } from 'react';\r\nimport { Label, Col, Row, Button } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst isValidNumber = (val) => (val >= 20) && (val <= 80);\r\n\r\nclass Hitting extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postComment(\"Hitting\", values.contact, values.power, values.hittingBalance);\r\n        alert(\"Submitted Successfully\");\r\n    }\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className=\"container\">\r\n\t            <div className=\"col-12 col-md-9 pt-3\">\r\n\t                <h4>Fielding Evaluation</h4>\r\n\t                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n\t                    <Row className=\"form-group\">\r\n\t                        <Label htmlFor=\"contact\" md={2}>Contact</Label>\r\n\t                        <Col md={10}>\r\n\t                            <Control.text model=\".contact\" id=\"contact\" name=\"contact\"\r\n\t                                placeholder=\"20-80\"\r\n\t                                className=\"form-control\" validators={{\r\n                                    required, isNumber, isValidNumber\r\n                                \t}}/>\r\n\t                            <Errors\r\n\t                                className=\"text-danger\"\r\n\t                                model=\".contact\"\r\n\t                                show=\"touched\"\r\n\t                                messages={{\r\n                                    required: 'Required ',\r\n                                    isNumber: 'Must be a number ',\r\n                                    isValidNumber: 'Must be between 20 and 80'\r\n                                \t}}\r\n\t                            />\r\n\t                        </Col>\r\n\t                    </Row>\r\n\t                    <Row className=\"form-group\">\r\n\t                        <Label htmlFor=\"power\" md={2}>Power</Label>\r\n\t                        <Col md={10}>\r\n\t                            <Control.text model=\".power\" id=\"power\" name=\"power\"\r\n\t                                placeholder=\"20-80\"\r\n\t                                className=\"form-control\" validators={{\r\n                                    required, isNumber, isValidNumber\r\n                                \t}}/>\r\n\t                            <Errors\r\n\t                                className=\"text-danger\"\r\n\t                                model=\".power\"\r\n\t                                show=\"touched\"\r\n\t                                messages={{\r\n                                    required: 'Required ',\r\n                                    isNumber: 'Must be a number ',\r\n                                    isValidNumber: 'Must be between 20 and 80'\r\n                                \t}}\r\n\t                            />\r\n\t                        </Col>\r\n\t                    </Row>\r\n\t                    <Row className=\"form-group\">\r\n\t                        <Label htmlFor=\"hittingBalance\" md={2}>Balance</Label>\r\n\t                        <Col md={10}>\r\n\t                            <Control.text model=\".hittingBalance\" id=\"hittingBalance\" name=\"hittingBalance\"\r\n\t                                placeholder=\"20-80\"\r\n\t                                className=\"form-control\" validators={{\r\n                                    required, isNumber, isValidNumber\r\n                                \t}}/>\r\n\t                            <Errors\r\n\t                                className=\"text-danger\"\r\n\t                                model=\".hittingBalance\"\r\n\t                                show=\"touched\"\r\n\t                                messages={{\r\n                                    required: 'Required ',\r\n                                    isNumber: 'Must be a number ',\r\n                                    isValidNumber: 'Must be between 20 and 80'\r\n                                \t}}\r\n\t                            />\r\n\t                        </Col>\r\n\t                    </Row>\r\n\t                    <Row className=\"form-group\">\r\n\t                        <Col md={{size: 10, offset: 2}}>\r\n\t                            <Button type=\"submit\" color=\"primary\">\r\n\t                                Submit\r\n\t                            </Button>\r\n\t                        </Col>\r\n\t                    </Row>\r\n\t                    <Row className=\"form-group\">\r\n\t                        <Col md={{size: 10, offset: 2}}>\r\n\t                            <Link to=\"/menu\">\r\n\t                                <Button type=\"submit\" color=\"primary\">\r\n\t                                    Back\r\n\t                                </Button>\r\n\t                            </Link>\r\n\t                        </Col>\r\n\t                    </Row>\r\n\t                </LocalForm>\r\n\t            </div>\r\n\t        </div>\r\n\t    );\r\n\t}\r\n}\r\n\r\nexport default Hitting;","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\redux\\ActionCreators.js",[],"C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\redux\\ActionTypes.js",[],"C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\BarChart.js",["116","117"],"import React, {Component} from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nclass BarChart extends Component {\r\n\r\n  componentDidMount() {\r\n    this.drawChart();\r\n  }\r\n\r\n  drawChart() {\r\n    const fieldData = [20, 20, 20];\r\n    const throwData = [20, 20, 20];\r\n    const hitData = [20, 20, 20];\r\n    const w = 300;\r\n    const h = 570;\r\n    const widthdata = [80, 80, 80];\r\n    const redColor = \"#a1241b\";\r\n    const greenColor = \"#0c4703\";\r\n    var colorOne = redColor;\r\n    var colorTwo = redColor;\r\n    var colorThree = redColor;\r\n    var colorArray = [colorOne, colorTwo, colorThree];\r\n    var overallColorArray = [redColor, greenColor];\r\n    var overallColor = redColor;\r\n    var fieldOverall = 0;\r\n    const overallArray = [this.props.overall, 80];\r\n\r\n    if (this.props.fieldingdata !== undefined) {\r\n\t    for(var i = 0; i < 3; i++) {\r\n\t    \tfieldData[i] = this.props.fieldingdata[i];\r\n\t    }\r\n      if (this.props.fieldingdata[0] > 50) {\r\n        colorOne = greenColor;\r\n      }\r\n      if (this.props.fieldingdata[1] > 50) {\r\n        colorTwo = greenColor;\r\n      }\r\n      if (this.props.fieldingdata[2] > 50) {\r\n        colorThree = greenColor;\r\n      }\r\n      colorArray[0] = colorOne;\r\n      colorArray[1] = colorTwo;\r\n      colorArray[2] = colorThree;\r\n      fieldOverall = Math.round(((parseInt(fieldData[0]) + parseInt(fieldData[1]) + parseInt(fieldData[2])) / 3) * 100) / 100;\r\n      overallArray[1] = fieldOverall;\r\n    }\r\n\r\n    if (this.props.throwingdata !== undefined) {\r\n    \tfor (var i = 0; i < 3; i++) {\r\n    \t\tthrowData[i] = this.props.throwingdata[i];\r\n    \t}\r\n    }\r\n\r\n    if (this.props.hittingdata !== undefined) {\r\n    \tfor (var i = 0; i < 3; i++) {\r\n    \t\thitData[i] = this.props.hittingdata[i];\r\n    \t}\r\n    }\r\n\r\n    const dataArray = [fieldData, throwData, hitData];\r\n    const textArray = [\"Soft Hands: \" + fieldData[0].toString(), \"Footwork: \" + fieldData[1].toString(), \"Backhand: \" + fieldData[2].toString(),\r\n        \"Arm Action: \" + throwData[0].toString(), \"Footwork: \" + throwData[1].toString(), \"Balance: \" + throwData[2].toString(),\r\n        \"Contact: \" + hitData[0].toString(), \"Power: \" + hitData[1].toString(),  \"Balance: \" + hitData[2].toString()];\r\n    var arrayIndex = 1;\r\n    if (this.props.overall >= 50) {\r\n      overallColorArray[0] = greenColor;\r\n    }\r\n\r\n    const svg = d3.select(\"#fieldingchart\")\r\n\t    .append(\"svg\")\r\n\t    .attr(\"width\", w)\r\n\t    .attr(\"height\", h);\r\n\r\n   \tsvg.selectAll(\"g\")\r\n      .data(widthdata)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", 0)\r\n      .attr(\"y\", (d, i) => i * 70 + 350)\r\n      .attr(\"width\", (d, i) => d * 3)\r\n      .attr(\"height\", 65)\r\n      .attr(\"fill\", \"gray\");    \r\n\r\n    svg.selectAll(\"g\")\r\n      .data(fieldData)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", 0)\r\n      .attr(\"y\", (d, i) => i * 70 + 350)\r\n      .attr(\"width\", (d, i) => d * 3)\r\n      .attr(\"height\", 65)\r\n      .attr(\"fill\", (d, i) => colorArray[i])\r\n      .attr(\"id\", \"datarect\");\r\n\r\n    svg.selectAll(\"g\")\r\n      .data(fieldData)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => d * 3 - 5)\r\n      .attr(\"y\", (d, i) => i * 70 + 350)\r\n      .attr(\"width\", 5)\r\n      .attr(\"height\", 65)\r\n      .attr(\"fill\", \"white\")\r\n      .attr(\"id\", \"whitebar\");\r\n\r\n    svg.selectAll(\"g\")\r\n      .data(fieldData)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", 10)\r\n      .attr(\"y\", (d, i) => i * 70 + 365)\r\n      .attr(\"width\", 120)\r\n      .attr(\"height\", 35)\r\n      .attr(\"id\", \"graytextbar\")\r\n      .style(\"fill\", \"white\")\r\n      .style(\"opacity\", 0.7);\r\n\r\n    svg.selectAll(\"g\")\r\n      .data([80, 80])\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", 0)\r\n      .attr(\"y\", (d, i) => i * 140 + 70)\r\n      .attr(\"width\", (d, i) => d * 3)\r\n      .attr(\"height\", 65)\r\n      .attr(\"fill\", \"gray\");\r\n\r\n    // Overall average rect\r\n    svg.selectAll(\"g\")\r\n      .data(overallArray)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", 0)\r\n      .attr(\"y\", (d, i) => (i * 140) + 70)\r\n      .attr(\"width\", (d, i) => d * 3)\r\n      .attr(\"height\", 65)\r\n      .attr(\"fill\", (d, i) => colorArray[i])\r\n      .attr(\"id\", \"overallRect\");\r\n\r\n    svg.selectAll(\"g\")\r\n      .data(overallArray)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => d * 3 - 5)\r\n      .attr(\"y\", (d, i) => i * 140 + 70)\r\n      .attr(\"width\", 5)\r\n      .attr(\"height\", 65)\r\n      .attr(\"fill\", \"white\")\r\n      .attr(\"id\", \"averageWhiteBar\");\r\n\r\n    svg.selectAll(\"g\")\r\n      .data(overallArray)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", 10)\r\n      .attr(\"y\", (d, i) => i * 140 + 85)\r\n      .attr(\"width\", 120)\r\n      .attr(\"height\", 35)\r\n      .attr(\"id\", \"graytextbar\")\r\n      .style(\"fill\", \"white\")\r\n      .style(\"opacity\", 0.7);\r\n\r\n    svg.append(\"text\")\r\n     .attr(\"x\", 20)\r\n     .attr(\"y\", 110)\r\n     .attr(\"id\", \"overallText\")\r\n     .style(\"fill\", \"black\")\r\n     .style(\"font-family\", \"'Oswald', sans-serif\")\r\n     .text(\"Overall: \" + overallArray[0]);\r\n\r\n    // Average Text\r\n    svg.append(\"text\")\r\n     .attr(\"x\", 20)\r\n     .attr(\"y\", 250)\r\n     .attr(\"id\", \"averageText\")\r\n     .style(\"fill\", \"black\")\r\n     .style(\"font-family\", \"'Oswald', sans-serif\")\r\n     .text(\"Average: \" + overallArray[1]);\r\n\r\n    svg.append(\"text\")\r\n     .attr(\"x\", 20)\r\n     .attr(\"y\", 40)\r\n     .style(\"fill\", \"white\")\r\n     .style(\"font-family\", \"'Oswald', sans-serif\")\r\n     .text(\"Overall: \" + this.props.overall);\r\n\r\n    svg.append(\"text\")\r\n     .attr(\"x\", 20)\r\n     .attr(\"y\", 180)\r\n     .attr(\"id\", \"fieldingAverage\")\r\n     .style(\"fill\", \"white\")\r\n     .style(\"font-family\", \"'Oswald', sans-serif\")\r\n     .text(\"Fielding Average: \");\r\n\r\n    svg.append(\"text\")\r\n     .attr(\"x\", 20)\r\n     .attr(\"y\", 320)\r\n     .attr(\"id\", \"statisticsText\")\r\n     .style(\"fill\", \"white\")\r\n     .style(\"font-family\", \"'Oswald', sans-serif\")\r\n     .text(\"Fielding Statistics:\");   \r\n\r\n    svg.append(\"text\")\r\n\t   .attr(\"x\", 20)\r\n\t   .attr(\"y\", 390)\r\n     .attr(\"id\", \"viztextone\")\r\n\t   .style(\"fill\", \"black\")\r\n     .style(\"font-family\", \"'Oswald', sans-serif\")\r\n\t   .text(\"Soft Hands: \" + fieldData[0]);\r\n\r\n    svg.append(\"text\")\r\n     .attr(\"x\", 20)\r\n     .attr(\"y\", 460)\r\n     .attr(\"id\", \"viztexttwo\")\r\n     .style(\"fill\", \"black\")\r\n     .style(\"font-family\", \"'Oswald', sans-serif\")\r\n     .text(\"Footwork: \" + fieldData[1]);\r\n\r\n    svg.append(\"text\")\r\n     .attr(\"x\", 20)\r\n     .attr(\"y\", 530)\r\n     .attr(\"id\", \"viztextthree\")\r\n     .style(\"fill\", \"black\")\r\n     .style(\"font-family\", \"'Oswald', sans-serif\")\r\n     .text(\"Backhand: \" + fieldData[2]);\r\n\r\n    svg.on(\"click\", function() {\r\n    \tif (arrayIndex === 3) {\r\n    \t\tarrayIndex = 0;\r\n    \t}\r\n\r\n      if (arrayIndex === 0) {\r\n        fieldOverall = 0;\r\n        fieldOverall = Math.round(((parseInt(fieldData[0]) + parseInt(fieldData[1]) + parseInt(fieldData[2])) / 3) * 100) / 100;\r\n        if (fieldData[0] < 50) {\r\n          colorOne = redColor;\r\n        } else {\r\n          colorOne = greenColor;\r\n        }\r\n        if (fieldData[1] < 50) {\r\n          colorTwo = redColor;\r\n        } else {\r\n          colorTwo = greenColor;\r\n        }\r\n        if (fieldData[2] < 50) {\r\n          colorThree = redColor;\r\n        } else {\r\n          colorThree = greenColor;\r\n        }\r\n        svg.select(\"#statisticsText\")\r\n          .transition()\r\n          .duration(1000)\r\n          .attr(\"x\", 20)\r\n          .attr(\"y\", 320)\r\n          .style(\"fill\", \"white\")\r\n          .text(\"Fielding Statistics:\");\r\n\r\n        svg.select(\"#fieldingAverage\")\r\n          .transition()\r\n          .duration(1000)\r\n          .attr(\"x\", 20)\r\n          .attr(\"y\", 180)\r\n          .style(\"fill\", \"white\")\r\n          .text(\"Fielding Average:\");\r\n      } else if (arrayIndex === 1) {\r\n        fieldOverall = 0;\r\n        fieldOverall = Math.round(((parseInt(throwData[0]) + parseInt(throwData[1]) + parseInt(throwData[2])) / 3) * 100) / 100;\r\n        if (throwData[0] < 50) {\r\n          colorOne = redColor;\r\n        } else {\r\n          colorOne = greenColor;\r\n        }\r\n        if (throwData[1] < 50) {\r\n          colorTwo = redColor;\r\n        } else {\r\n          colorTwo = greenColor;\r\n        }\r\n        if (throwData[2] < 50) {\r\n          colorThree = redColor;\r\n        } else {\r\n          colorThree = greenColor;\r\n        }\r\n        svg.select(\"#statisticsText\")\r\n          .transition()\r\n          .duration(1000)\r\n          .attr(\"x\", 20)\r\n          .attr(\"y\", 320)\r\n          .style(\"fill\", \"white\")\r\n          .text(\"Throwing Statistics:\");\r\n\r\n        svg.select(\"#fieldingAverage\")\r\n          .transition()\r\n          .duration(1000)\r\n          .attr(\"x\", 20)\r\n          .attr(\"y\", 180)\r\n          .style(\"fill\", \"white\")\r\n          .text(\"Throwing Average:\");\r\n      } else {\r\n        fieldOverall = 0;\r\n        fieldOverall = Math.round(((parseInt(hitData[0]) + parseInt(hitData[1]) + parseInt(hitData[2])) / 3) * 100) / 100;\r\n        if (hitData[0] < 50) {\r\n          colorOne = redColor;\r\n        } else {\r\n          colorOne = greenColor;\r\n        }\r\n        if (hitData[1] < 50) {\r\n          colorTwo = redColor;\r\n        } else {\r\n          colorTwo = greenColor;\r\n        }\r\n        if (hitData[2] < 50) {\r\n          colorThree = redColor;\r\n        } else {\r\n          colorThree = greenColor;\r\n        }\r\n        svg.select(\"#statisticsText\")\r\n          .transition()\r\n          .duration(1000)\r\n          .attr(\"x\", 20)\r\n          .attr(\"y\", 320)\r\n          .style(\"fill\", \"white\")\r\n          .text(\"Hitting Statistics:\");\r\n\r\n        svg.select(\"#fieldingAverage\")\r\n          .transition()\r\n          .duration(1000)\r\n          .attr(\"x\", 20)\r\n          .attr(\"y\", 180)\r\n          .style(\"fill\", \"white\")\r\n          .text(\"Hitting Average:\");\r\n      }\r\n      colorArray[0] = colorOne;\r\n      colorArray[1] = colorTwo;\r\n      colorArray[2] = colorThree;\r\n\r\n      overallArray[1] = fieldOverall;\r\n      if (overallArray[1] < 50) {\r\n        overallColor = redColor;\r\n      } else {\r\n        overallColor = greenColor;\r\n      }\r\n      overallColorArray[1] = overallColor;\r\n\r\n      svg.select(\"#averageText\")\r\n        .transition()\r\n        .duration(1000)\r\n        .text(\"Average: \" + overallArray[1]);\r\n\r\n      svg.selectAll(\"#overallRect\")\r\n        .data(overallArray)\r\n        .transition()\r\n        .duration(1000)\r\n        .attr(\"x\", 0)\r\n        .attr(\"y\", (d, i) => i * 140 + 70)\r\n        .attr(\"width\", (d, i) => d * 3)\r\n        .attr(\"height\", 65)\r\n        .attr(\"fill\", (d, i) => overallColorArray[i]);\r\n\r\n      svg.selectAll(\"#averageWhiteBar\")\r\n        .data(overallArray)\r\n        .transition()\r\n        .duration(1000)\r\n        .attr(\"x\", (d, i) => d * 3 - 5)\r\n        .attr(\"y\", (d, i) => i * 140 + 70)\r\n        .attr(\"width\", 5)\r\n        .attr(\"height\", 65)\r\n        .attr(\"fill\", \"white\");\r\n\r\n      svg.select(\"#viztextone\")\r\n        .transition()\r\n        .duration(1000)\r\n        .attr(\"x\", 20)\r\n        .attr(\"y\", 390)\r\n        .style(\"fill\", \"black\")\r\n        .text(textArray[3 * arrayIndex]);\r\n\r\n      svg.select(\"#viztexttwo\")\r\n        .transition()\r\n        .duration(1000)\r\n        .attr(\"x\", 20)\r\n        .attr(\"y\", 460)\r\n        .style(\"fill\", \"black\")\r\n        .text(textArray[3 * arrayIndex + 1]);\r\n\r\n      svg.select(\"#viztextthree\")\r\n        .transition()\r\n        .duration(1000)\r\n        .attr(\"x\", 20)\r\n        .attr(\"y\", 530)\r\n        .style(\"fill\", \"black\")\r\n        .text(textArray[3 * arrayIndex + 2]);\r\n\r\n    \tsvg.selectAll(\"#datarect\")\r\n    \t\t.data(dataArray[arrayIndex])\r\n    \t\t.transition()\r\n    \t\t.duration(1000)\r\n    \t\t.attr(\"x\", 0)\r\n\t\t    .attr(\"y\", (d, i) => i * 70 + 350)\r\n\t\t    .attr(\"width\", (d, i) => d * 3)\r\n\t\t    .attr(\"height\", 65)\r\n\t\t    .attr(\"fill\", (d, i) => colorArray[i]);\r\n\r\n\t\tsvg.selectAll(\"#whitebar\")\r\n\t\t\t.data(dataArray[arrayIndex])\r\n\t\t\t.transition()\r\n\t\t\t.duration(1000)\r\n\t\t\t.attr(\"x\", (d, i) => d * 3 - 5)\r\n\t\t    .attr(\"y\", (d, i) => i * 70 + 350)\r\n\t\t    .attr(\"width\", 5)\r\n\t\t    .attr(\"height\", 65)\r\n\t\t    .attr(\"fill\", \"white\");\r\n\t\t  arrayIndex++;\r\n    })\r\n  }\r\n        \r\n  render(){\r\n    return <div id={\"#\" + this.props.id}></div>\r\n  }\r\n  \r\n\r\n}\r\n\r\nexport default BarChart;","C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\shared\\baseUrl.js",[],"C:\\Users\\morga\\Desktop\\LatestEv\\Ev\\src\\components\\ContactUs.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":8,"column":9,"nodeType":"124","messageId":"125","endLine":8,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":31,"column":30,"nodeType":"128","endLine":35,"endColumn":39},{"ruleId":"126","severity":1,"message":"127","line":51,"column":30,"nodeType":"128","endLine":55,"endColumn":38},{"ruleId":"126","severity":1,"message":"127","line":71,"column":30,"nodeType":"128","endLine":75,"endColumn":38},{"ruleId":"126","severity":1,"message":"127","line":32,"column":29,"nodeType":"128","endLine":38,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":54,"column":29,"nodeType":"128","endLine":60,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":76,"column":29,"nodeType":"128","endLine":82,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":99,"column":29,"nodeType":"128","endLine":105,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":120,"column":29,"nodeType":"128","endLine":126,"endColumn":35},{"ruleId":"126","severity":1,"message":"129","line":141,"column":29,"nodeType":"128","endLine":146,"endColumn":36},{"ruleId":"126","severity":1,"message":"129","line":171,"column":29,"nodeType":"128","endLine":175,"endColumn":36},{"ruleId":"126","severity":1,"message":"127","line":31,"column":30,"nodeType":"128","endLine":35,"endColumn":38},{"ruleId":"126","severity":1,"message":"127","line":51,"column":30,"nodeType":"128","endLine":55,"endColumn":38},{"ruleId":"126","severity":1,"message":"127","line":71,"column":30,"nodeType":"128","endLine":75,"endColumn":38},{"ruleId":"122","severity":1,"message":"130","line":4,"column":8,"nodeType":"124","messageId":"125","endLine":4,"endColumn":17},{"ruleId":"126","severity":1,"message":"127","line":31,"column":30,"nodeType":"128","endLine":35,"endColumn":38},{"ruleId":"126","severity":1,"message":"127","line":51,"column":30,"nodeType":"128","endLine":55,"endColumn":38},{"ruleId":"126","severity":1,"message":"127","line":71,"column":30,"nodeType":"128","endLine":75,"endColumn":38},{"ruleId":"131","severity":1,"message":"132","line":49,"column":15,"nodeType":"124","messageId":"133","endLine":49,"endColumn":16},{"ruleId":"131","severity":1,"message":"132","line":55,"column":15,"nodeType":"124","messageId":"133","endLine":55,"endColumn":16},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'init' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","'ContactUs' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]